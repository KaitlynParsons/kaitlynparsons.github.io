import "./About.scss";
import profile from "../../assets/profile.jpg";
import { IContact } from "../../interfaces/IContact";
import { motion, useDragControls } from "framer-motion";
import { useRef } from "react";

const contact: IContact[] = [
  {
    svg: (
      <motion.svg
        whileHover={{ scale: 1.2, fill: "#f033b4", stroke: "#f033b4" }}
        whileTap={{ scale: 0.8, fill: "#f033b4", stroke: "#f033b4" }}
        style={{ x: 0 }}
        xmlns="http://www.w3.org/2000/svg"
        x="0px"
        y="0px"
        viewBox="0 0 150 150"
        width="50px"
        height="50px"
        stroke="#fff"
        fill="#fff"
        strokeWidth={2}
      >
        <path
          d="M75,6c38.1,0,69,30.9,69,69s-30.9,69-69,69S6,113.1,6,75c0-18.3,7.3-35.9,20.2-48.8C39.1,13.2,56.7,6,75,6z
    M43.4,49.4h63.2c2.3,0,4.1,1.8,4.1,4.1v43.5c0,0.8-0.3,1.6-0.7,2.2c-0.1,0.2-0.2,0.4-0.4,0.6c-0.1,0.1-0.2,0.2-0.4,0.3
   c-0.7,0.6-1.7,0.9-2.6,1H43.4c-1.1,0-2.1-0.4-2.9-1.2c-0.8-0.8-1.2-1.8-1.2-2.9V53.5C39.3,51.2,41.1,49.4,43.4,49.4z M42.4,95.2
   L64.6,73L42.4,54.9C42.4,54.9,42.4,95.2,42.4,95.2z M67,75L44.2,97.9h61.4L83.8,75l-7.2,6.1l0,0c-0.6,0.5-1.4,0.5-2,0L67,75L67,75z
    M86.1,72.9l21.3,22.5V54.7C107.4,54.7,86.1,72.9,86.1,72.9z M44.4,52.5l31.1,25.3l29.8-25.3H44.4z M120.8,29.2
   c-25.3-25.3-66.3-25.3-91.6,0s-25.3,66.3,0,91.6s66.3,25.3,91.6,0c12.1-12.1,19-28.6,19-45.8C139.8,57.8,133,41.3,120.8,29.2z"
        />
      </motion.svg>
    ),
    href: "mailto:kaitlynparsons@outlook.com.au",
  },
  {
    svg: (
      <motion.svg
        whileHover={{ scale: 1.2, fill: "#f033b4" }}
        whileTap={{ scale: 0.8, fill: "#f033b4" }}
        style={{ x: 0 }}
        xmlns="http://www.w3.org/2000/svg"
        fill="#fff"
        viewBox="0 0 50 50"
        width="50px"
        height="50px"
      >
        <path d="M 25 2 C 12.354545 2 2 12.354545 2 25 C 2 37.645455 12.354545 48 25 48 C 37.645455 48 48 37.645455 48 25 C 48 12.354545 37.645455 2 25 2 z M 25 4 C 36.554545 4 46 13.445455 46 25 C 46 25.093716 45.993426 25.185862 45.992188 25.279297 C 45.355643 25.213574 44.619449 25.151947 43.683594 25.113281 C 42.349262 25.058153 40.667887 25.070474 38.767578 25.169922 C 38.842322 24.665304 38.893164 24.152982 38.894531 23.626953 C 38.991361 21.754332 38.362521 20.002464 37.339844 18.455078 C 37.586913 17.601352 37.876747 16.515218 37.949219 15.283203 C 38.031819 13.878925 37.910599 12.321765 36.783203 11.269531 L 36.494141 11 L 36.099609 11 C 33.416539 11 31.580023 12.12321 30.457031 13.013672 C 28.835529 12.386022 27.01222 12 25 12 C 22.976367 12 21.135525 12.391416 19.447266 13.017578 C 18.324911 12.126691 16.486785 11 13.800781 11 L 13.408203 11 L 13.119141 11.267578 C 12.020956 12.287321 11.919778 13.801759 11.988281 15.199219 C 12.048691 16.431506 12.321732 17.552142 12.564453 18.447266 C 11.524489 20.02486 10.900391 21.822018 10.900391 23.599609 C 10.900391 24.101066 10.946801 24.590099 11.013672 25.072266 C 7.8894658 24.970983 5.518755 25.05331 4.0039062 25.191406 C 4.0033241 25.127325 4 25.064213 4 25 C 4 13.445455 13.445455 4 25 4 z M 14.396484 13.130859 C 16.414067 13.322043 17.931995 14.222972 18.634766 14.847656 L 19.103516 15.261719 L 19.681641 15.025391 C 21.263092 14.374205 23.026984 14 25 14 C 26.973016 14 28.737393 14.376076 30.199219 15.015625 L 30.785156 15.273438 L 31.263672 14.847656 C 31.966683 14.222758 33.487184 13.321554 35.505859 13.130859 C 35.774256 13.575841 36.007486 14.208668 35.951172 15.166016 C 35.883772 16.311737 35.577304 17.559658 35.345703 18.300781 L 35.195312 18.783203 L 35.494141 19.191406 C 36.483616 20.540691 36.988121 22.000937 36.902344 23.544922 L 36.900391 23.572266 L 36.900391 23.599609 C 36.900391 26.095064 36.00178 28.092339 34.087891 29.572266 C 32.174048 31.052199 29.152663 32 24.900391 32 C 20.648118 32 17.624827 31.052192 15.710938 29.572266 C 13.797047 28.092339 12.900391 26.095064 12.900391 23.599609 C 12.900391 22.134903 13.429308 20.523599 14.40625 19.191406 L 14.699219 18.792969 L 14.558594 18.318359 C 14.326866 17.530484 14.042825 16.254103 13.986328 15.101562 C 13.939338 14.14294 14.166221 13.537027 14.396484 13.130859 z M 8.8867188 26.019531 C 9.5909207 26.024035 10.397743 26.051943 11.203125 26.080078 C 11.281506 26.399647 11.374577 26.712873 11.484375 27.019531 C 8.1709433 27.091537 5.704398 27.434455 4.1835938 27.728516 C 4.1171404 27.221899 4.0664333 26.710385 4.0371094 26.193359 C 5.1545506 26.089867 6.7502168 26.005867 8.8867188 26.019531 z M 41.113281 26.076172 C 43.242845 26.051402 44.834805 26.164134 45.957031 26.283203 C 45.927668 26.764345 45.879919 27.240812 45.818359 27.712891 C 44.245568 27.413519 41.71721 27.071329 38.314453 27.015625 C 38.411856 26.742348 38.491935 26.461309 38.564453 26.177734 C 39.462674 26.126533 40.338362 26.085185 41.113281 26.076172 z M 37.892578 28.007812 C 41.465652 28.03978 44.085317 28.396925 45.666016 28.699219 C 44.325335 36.167288 39.008358 42.292747 32 44.789062 L 32 39.599609 C 32 38.015041 31.479642 36.267712 30.574219 34.810547 C 30.299322 34.368135 29.975945 33.949736 29.615234 33.574219 C 31.930453 33.11684 33.832364 32.298821 35.3125 31.154297 C 36.44296 30.280162 37.297012 29.208854 37.892578 28.007812 z M 11.908203 28.013672 C 12.505054 29.212023 13.359546 30.281496 14.488281 31.154297 C 16.028825 32.345531 18.031623 33.177838 20.476562 33.623047 C 20.156699 33.951698 19.86578 34.312595 19.607422 34.693359 L 19.546875 34.640625 C 19.552375 34.634325 19.04975 34.885878 18.298828 34.953125 C 17.547906 35.020374 16.621615 35 15.800781 35 C 14.575781 35 14.03621 34.42121 13.173828 33.367188 C 12.696283 32.72356 12.114101 32.202331 11.548828 31.806641 C 10.970021 31.401475 10.476259 31.115509 9.8652344 31.013672 L 9.7832031 31 L 9.6992188 31 C 9.2325521 31 8.7809835 31.03379 8.359375 31.515625 C 8.1485707 31.756544 8.003277 32.202561 8.0976562 32.580078 C 8.1920352 32.957595 8.4308563 33.189581 8.6445312 33.332031 C 10.011254 34.24318 10.252795 36.046511 11.109375 37.650391 C 11.909298 39.244315 13.635662 40 15.400391 40 L 18 40 L 18 44.789062 C 10.997174 42.294717 5.68379 36.176856 4.3378906 28.716797 C 5.863528 28.419405 8.4148311 28.06385 11.908203 28.013672 z M 23.699219 34.099609 L 26.5 34.099609 C 27.312821 34.099609 28.180423 34.7474 28.875 35.865234 C 29.569577 36.983069 30 38.484177 30 39.599609 L 30 45.390625 C 28.396051 45.785878 26.721908 46 25 46 C 23.278092 46 21.603949 45.785878 20 45.390625 L 20 39.599609 C 20 38.508869 20.467828 37.011307 21.208984 35.888672 C 21.950141 34.766037 22.886398 34.099609 23.699219 34.099609 z M 12.308594 35.28125 C 13.174368 36.179258 14.222525 37 15.800781 37 C 16.579948 37 17.552484 37.028073 18.476562 36.945312 C 18.479848 36.945018 18.483042 36.943654 18.486328 36.943359 C 18.36458 37.293361 18.273744 37.645529 18.197266 38 L 15.400391 38 C 14.167057 38 13.29577 37.55443 12.894531 36.751953 L 12.886719 36.738281 L 12.880859 36.726562 C 12.716457 36.421191 12.500645 35.81059 12.308594 35.28125 z" />
      </motion.svg>
    ),
    href: "https://github.com/KaitlynParsons",
  },
  {
    svg: (
      <motion.svg
        whileHover={{ scale: 1.2, fill: "#f033b4" }}
        whileTap={{ scale: 0.8, fill: "#f033b4" }}
        style={{ x: 0 }}
        xmlns="http://www.w3.org/2000/svg"
        fill="#fff"
        viewBox="0 0 50 50"
        width="50px"
        height="50px"
      >
        <path d="M 25 2 C 12.308594 2 2 12.308594 2 25 C 2 37.691406 12.308594 48 25 48 C 37.691406 48 48 37.691406 48 25 C 48 12.308594 37.691406 2 25 2 Z M 25 4 C 36.609375 4 46 13.390625 46 25 C 46 36.609375 36.609375 46 25 46 C 13.390625 46 4 36.609375 4 25 C 4 13.390625 13.390625 4 25 4 Z M 16 12 C 14.355469 12 13 13.355469 13 15 C 13 16.644531 14.355469 18 16 18 C 17.644531 18 19 16.644531 19 15 C 19 13.355469 17.644531 12 16 12 Z M 16 14 C 16.5625 14 17 14.4375 17 15 C 17 15.5625 16.5625 16 16 16 C 15.4375 16 15 15.5625 15 15 C 15 14.4375 15.4375 14 16 14 Z M 14 19 C 13.449219 19 13 19.449219 13 20 L 13 35 C 13 35.550781 13.449219 36 14 36 L 18 36 C 18.550781 36 19 35.550781 19 35 L 19 20 C 19 19.449219 18.550781 19 18 19 Z M 22 19 C 21.449219 19 21 19.449219 21 20 L 21 35 C 21 35.550781 21.449219 36 22 36 L 26 36 C 26.550781 36 27 35.550781 27 35 L 27 27.5 C 27 26.121094 28.121094 25 29.5 25 C 30.878906 25 32 26.121094 32 27.5 L 32 35 C 32 35.550781 32.449219 36 33 36 L 37 36 C 37.550781 36 38 35.550781 38 35 L 38 26.5 C 38 22.371094 34.628906 19 30.5 19 C 29.214844 19 28.058594 19.417969 27 19.988281 C 26.996094 19.441406 26.546875 19 26 19 Z M 15 21 L 17 21 L 17 34 L 15 34 Z M 23 21 L 25 21 L 25 21.816406 C 25 22.21875 25.238281 22.578125 25.609375 22.738281 C 25.976562 22.894531 26.40625 22.816406 26.691406 22.535156 C 27.683594 21.585938 29.015625 21 30.5 21 C 33.550781 21 36 23.449219 36 26.5 L 36 34 L 34 34 L 34 27.5 C 34 25.03125 31.96875 23 29.5 23 C 27.03125 23 25 25.03125 25 27.5 L 25 34 L 23 34 Z M 23 21" />
      </motion.svg>
    ),
    href: "https://www.linkedin.com/in/kpars/",
  },
];

const About = () => {
  const constraintsRef = useRef<HTMLElement | null>(null);
  const controls = useDragControls();
  const startDrag = (event: React.PointerEvent) => controls.start(event);

  return (
    <section onPointerDown={startDrag} className="page" ref={constraintsRef}>
      <motion.section drag dragControls={controls} dragConstraints={constraintsRef} className="content-section">
        <img className="profile" src={profile} />
        <div>
          <h1>
            kaitlyn<span>parsons</span>
          </h1>
          Software Engineer
          <div className="icon-container">
            <div>
              {contact.map((detail, index) => {
                return (
                  <a key={index} href={detail.href} target="_blank">
                    {detail.svg}
                  </a>
                );
              })}
            </div>
          </div>
        </div>
      </motion.section>
    </section>
  );
};

export default About;
